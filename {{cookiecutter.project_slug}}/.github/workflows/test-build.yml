name: Test Build Without Deploy

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type (for testing purposes only)'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

env:
  BACKEND_IMAGE_NAME: {{ cookiecutter.backend_image_name }}
  FRONTEND_IMAGE_NAME: {{ cookiecutter.frontend_image_name }}
  

{% raw %}
jobs:
  test-build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read  # Only read permissions needed
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Build and Test (No Commit)
      id: build-test
      uses: ./.github/actions/build-and-test
      with:
        version-bump: ${{ github.event.inputs.version_bump || 'patch' }}
        commit-changes: 'false'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Dockerfile Build Test ${{ env.FRONTEND_IMAGE_NAME }} Container
      if: steps.build-test.outputs.frontend-changed == 'true'
      uses: ./.github/actions/dockerfile-build
      with:
        image-name: ${{ env.FRONTEND_IMAGE_NAME }}
        push: false  # Never push in test workflow
        quay-enabled: false
        ghcr-enabled: false
        linkyard-enabled: false
        vulnerability-scan: true  # Enable scanning for testing
        working-directory: './frontend'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Dockerfile Build Test ${{ env.BACKEND_IMAGE_NAME }} Container
      if: steps.build-test.outputs.backend-changed == 'true'
      uses: ./.github/actions/dockerfile-build
      with:
        image-name: ${{ env.BACKEND_IMAGE_NAME }}
        push: false  # Never push in test workflow
        quay-enabled: false
        ghcr-enabled: false
        linkyard-enabled: false
        vulnerability-scan: true  # Enable scanning for testing
        working-directory: './backend'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Test Report
      if: always()
      run: |
        echo "=== Test Build Report ==="
        echo "Workflow: Test Build Without Deploy"
        echo "Trigger: ${{ github.event_name }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Version (test): ${{ steps.build-test.outputs.version }}"
        echo "Frontend changed: ${{ steps.build-test.outputs.frontend-changed }}"
        echo "Backend changed: ${{ steps.build-test.outputs.backend-changed }}"
        echo ""
        echo "Status:"
        echo "- ✓ Dependencies installed"
        echo "- ✓ Build preparation completed"
        echo "- ✓ Docker build validation performed"
        echo "- ✓ No changes committed"
        echo "- ✓ No images pushed to registry"
        echo ""
        echo "This workflow validates the build process without making any permanent changes."
        echo "=== End Test Build Report ==="

    - name: Upload Test Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-build-artifacts
        path: |
          version.txt
          release_changelog.md
          frontend/
          backend/
        retention-days: 7
{% endraw %}