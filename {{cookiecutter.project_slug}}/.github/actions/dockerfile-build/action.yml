name: "Dockerfile Build Composite Action"
description: "Build and optionally push Docker images with scanning and multi-registry support."

inputs:
  image-name:
    description: "Image name with optional path (e.g. devops/test-container)"
    required: true
  sha-tag:
    description: "Output Git short commit (or long if specified) as Docker tag"
    required: false
    default: "true"
  push:
    description: "Push image to registry. If false, only docker build is done."
    required: true
  working-directory:
    description: "Working directory"
    required: false
    default: "."
  docker-filename:
    description: "Dockerfile name"
    required: false
    default: "Dockerfile"
  vulnerability-scan:
    description: "Enable vulnerability scan"
    required: false
    default: "false"
  download-artifact:
    description: "Download pre-build artifacts"
    required: false
    default: "false"
  linkyard-enabled:
    description: "Enable push to linkyard registry"
    required: false
    default: "false"
  quay-enabled:
    description: "Enable push to quay.io"
    required: false
    default: "false"
  quay-organization:
    description: "Quay organization name"
    required: false
    default: ""
  quay-team:
    description: "Quay team name"
    required: false
    default: ""
  ghcr-enabled:
    description: "Enable push to ghcr.io"
    required: false
    default: "true"
  # Secrets passed as inputs
  linkyard-user:
    description: "Linkyard registry user"
    required: false
  linkyard-password:
    description: "Linkyard registry password"
    required: false
  quay-user:
    description: "Quay registry user"
    required: false
  quay-password:
    description: "Quay registry password"
    required: false
  github-token:
    description: "GitHub token for GHCR login"
    required: false

outputs:
  container-pushed:
    description: "Container pushed flag"
    value: "false"
  sha-tag-name:
    description: "SHA tag name"
    value: ""

runs:
  using: "composite"
  steps:
    - name: Download pre-build artifacts
      if: ${{ inputs.download-artifact == 'true' }}
      uses: actions/download-artifact@v4

    - name: Set SHORT_COMMIT_SHA
      shell: bash
      run: echo "SHORT_COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - id: sha-tag-step
      if: ${{ inputs.sha-tag == 'true' }}
      shell: bash
      run: |
        echo "sha-tag-name=sha-${SHORT_COMMIT_SHA}" >> $GITHUB_OUTPUT

    - name: Set REPOSITORY_OWNER_LOWERCASE
      shell: bash
      run: echo "REPOSITORY_OWNER_LOWERCASE=$(echo $GITHUB_REPOSITORY_OWNER | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Docker meta (prepare tags)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          name=ghcr.io/${{ env.REPOSITORY_OWNER_LOWERCASE }}/${{ inputs.image-name }},enable=${{ inputs.ghcr-enabled }}
          name=docker.nexus.itbs.linkyard-cloud.ch/${{ inputs.image-name }},enable=${{ inputs.linkyard-enabled }}
          name=quay.io/${{ inputs.image-name }},enable=${{ inputs.quay-enabled && inputs.quay-organization == '' && inputs.quay-team == '' }}
          name=quay.io/${{ inputs.quay-organization }}/${{ inputs.image-name }},enable=${{ inputs.quay-enabled && inputs.quay-organization != '' && inputs.quay-team == '' }}
          name=quay.io/${{ inputs.quay-organization }}/${{ inputs.quay-team }}/${{ inputs.image-name }},enable=${{ inputs.quay-enabled && inputs.quay-organization != '' && inputs.quay-team != '' }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=branch,enable=${{ contains(github.ref, 'release') }}
          type=semver,pattern={{version}}
          type=sha,enable=${{ inputs.sha-tag }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker

    - name: Build only and load into local docker (for vulnerability scanner)
      if: ${{ inputs.vulnerability-scan == 'true' }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.working-directory }}
        file: ${{ inputs.working-directory }}/${{ inputs.docker-filename }}
        load: true
        push: "false"
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Run trivy vulnerability scanner
      if: ${{ inputs.vulnerability-scan == 'true' }}
      uses: FD-ITBS/reusable-workflows/.github/actions/trivy-scan@main
      with:
        image-to-scan: ghcr.io/${{ env.REPOSITORY_OWNER_LOWERCASE }}/${{ inputs.image-name }}:sha-${{ env.SHORT_COMMIT_SHA }}

    - name: Login to linkyard registry
      if: ${{ inputs.push == 'true' && inputs.linkyard-enabled == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: docker.nexus.itbs.linkyard-cloud.ch
        username: ${{ inputs.linkyard-user }}
        password: ${{ inputs.linkyard-password }}

    - name: Login to quay.io registry
      if: ${{ inputs.push == 'true' && inputs.quay-enabled == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ inputs.quay-user }}
        password: ${{ inputs.quay-password }}

    - name: Login to GitHub Container Registry
      if: ${{ inputs.ghcr-enabled == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Build (and push if needed)
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.working-directory }}
        file: ${{ inputs.working-directory }}/${{ inputs.docker-filename }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Set container-pushed output
      if: ${{ inputs.push == 'true' }}
      shell: bash
      run: echo "container-pushed=true" >> $GITHUB_OUTPUT
