name: Deploy Application

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  BACKEND_IMAGE_NAME: {{ cookiecutter.backend_image_name }}
  FRONTEND_IMAGE_NAME: {{ cookiecutter.frontend_image_name }}

  {%- if cookiecutter.docker_registry == "ghcr" -%}
  GITHUB_ACTOR: ${{ github.actor }}
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  {%- elif cookiecutter.docker_registry == "quay.io" -%}
  QUAY_USER: ${{ secrets.QUAY_DMS_CONTAINER_REGISTRY_USER }}
  QUAY_PASSWORD: ${{ secrets.QUAY_CONTAINER_REGISTRY_PASSWORD }}
  QUAY_ORGANIZATION: your_organzatin
  QUAY_TEAM: your_team
  {%- endif -%}

{% raw %}
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Required to push version updates
      packages: write  # Required to push Docker images to GHCR
      checks: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Build and Test
      id: build-test
      uses: ./.github/actions/build-and-test
      with:
        version-bump: ${{ github.event.inputs.version_bump || 'patch' }}
        commit-changes: 'true'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Git Tag
      if: success()
      run: |
        git tag v${{ steps.build-test.outputs.version }}
        git push origin v${{ steps.build-test.outputs.version }}
  
    - name: Build and Push Frontend Container
      if: steps.build-test.outputs.frontend-changed == 'true'
      uses: ./.github/actions/dockerfile-build
      run: ./scripts/push-to-ghcr.sh
      env:
        IMAGE_NAME: ${{ env.FRONTEND_IMAGE_NAME }}
        ADDITIONAL_TAG: v${{ steps.build-test.outputs.version }}
        WORKING_DIR: ./frontend

    - name: Build and Push Backend Container
      if: steps.build-test.outputs.backend-changed == 'true'
      uses: ./.github/actions/dockerfile-build
      env:
        IMAGE_NAME: ${{ env.BACKEND_IMAGE_NAME }}
        ADDITIONAL_TAG: v${{ steps.build-test.outputs.version }}
        WORKING_DIR: ./backend
{% endraw %}