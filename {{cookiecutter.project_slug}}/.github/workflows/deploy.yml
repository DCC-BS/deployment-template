name: Prepare and Deploy Application

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  BACKEND_IMAGE_NAME: {{ cookiecutter.backend_image_name }}
  FRONTEND_IMAGE_NAME: {{ cookiecutter.frontend_image_name }}

{% raw %}
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Required to push version updates
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Build and Test
      id: build-test
      uses: ./.github/actions/build-and-test
      with:
        version-bump: ${{ github.event.inputs.version_bump || 'patch' }}
        commit-changes: 'true'
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build Docker images
      run: |
        echo "Building Docker images..."
        VERSION=$(cat version.txt)
        echo "Building with version: $VERSION"
        
        if [ -d "frontend" ] && [ -f "frontend/Dockerfile" ]; then
          echo "Building frontend image..."
          # docker build -t frontend:$VERSION ./frontend
        fi
        
        if [ -d "backend" ] && [ -f "backend/Dockerfile" ]; then
          echo "Building backend image..."
          # docker build -t backend:$VERSION ./backend
        fi
        
        echo "Docker build step completed"
  
    - name: Dockerfile Build and Push Frontend Container
      if: steps.build-test.outputs.frontend-changed == 'true'
      uses: ./.github/actions/dockerfile-build
      with:
        image-name: ${{ env.FRONTEND_IMAGE_NAME }}
        push: true
        quay-enabled: false
        ghcr-enabled: true
        vulnerability-scan: false
        working-directory: './frontend'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        linkyard-user: ${{ secrets.LINKYARD_CONTAINER_REGISTRY_USER }}
        linkyard-password: ${{ secrets.LINKYARD_CONTAINER_REGISTRY_PASSWORD }}
        quay-user: ${{ secrets.QUAY_CONTAINER_REGISTRY_USER }}
        quay-password: ${{ secrets.QUAY_CONTAINER_REGISTRY_PASSWORD }}

    - name: Dockerfile Build and Push Backend Container
      if: steps.build-test.outputs.backend-changed == 'true'
      uses: ./.github/actions/dockerfile-build
      with:
        image-name: ${{ env.BACKEND_IMAGE_NAME }}
        push: true
        quay-enabled: false
        ghcr-enabled: true
        vulnerability-scan: false
        working-directory: './backend'
        github-token: ${{ secrets.GITHUB_TOKEN  }}
        linkyard-user: ${{ secrets.LINKYARD_CONTAINER_REGISTRY_USER  }}
        linkyard-password: ${{ secrets.LINKYARD_CONTAINER_REGISTRY_PASSWORD  }}
        quay-user: ${{ secrets.QUAY_CONTAINER_REGISTRY_USER  }}
        quay-password: ${{ secrets.QUAY_CONTAINER_REGISTRY_PASSWORD  }}

    - name: Create Release
      if: success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.build-test.outputs.version }}
        release_name: Release v${{ steps.build-test.outputs.version }}
        body_path: release_changelog.md
        draft: false
        prerelease: false
{% endraw %}